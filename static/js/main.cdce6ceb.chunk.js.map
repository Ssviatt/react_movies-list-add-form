{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","pattern","useState","Math","random","toString","slice","id","touched","setTouched","hasError","urlError","match","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","formInputs","onAdd","count","setCount","onClick","e","preventDefault","prevState","disabled","App","setFormInputs","moviesFromServer","allMovies","setAllMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdce6ceb.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: ({ name, value }: {\n    name: string,\n    value: string,\n  }) => void,\n  pattern?: RegExp,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  pattern = '',\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n  const urlError = touched && required && !value.match(pattern);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          name={name}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {(name === 'imgUrl' || name === 'imdbUrl') && urlError && (\n        <p className=\"help is-danger\">The url address is not correct</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onChange: ({ name, value }: {\n    name: string,\n    value: string,\n  }) => void,\n  formInputs: Movie,\n  onAdd: ({\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  }: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onChange, formInputs, onAdd }) => {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n  const [count, setCount] = useState(0);\n\n  return (\n    <form className=\"NewMovie\" key={count}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={formInputs.title}\n        onChange={onChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={formInputs.description}\n        onChange={onChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={formInputs.imgUrl}\n        onChange={onChange}\n        pattern={pattern}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={formInputs.imdbUrl}\n        onChange={onChange}\n        pattern={pattern}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={formInputs.imdbId}\n        onChange={onChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={(e) => {\n              e.preventDefault();\n              onAdd(formInputs);\n              setCount(prevState => prevState + 1);\n            }}\n            disabled={\n              !formInputs.title\n              || !formInputs.imdbId\n              || !formInputs.imdbUrl\n              || !formInputs.imgUrl\n              || !formInputs.imdbUrl.match(pattern)\n              || !formInputs.imgUrl.match(pattern)\n            }\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [formInputs, setFormInputs] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n  const [allMovies, setAllMovies] = useState([...moviesFromServer]);\n  const handlerChange = ({ name, value }: {\n    name: string,\n    value: string,\n  }) => {\n    setFormInputs(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const addMovies = ({\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  }: Movie) => {\n    setAllMovies(prevState => ([\n      ...prevState,\n      {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      },\n    ]));\n\n    setFormInputs({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={allMovies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onChange={handlerChange}\n          formInputs={formInputs}\n          onAdd={addMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}