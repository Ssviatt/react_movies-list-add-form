{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","utils/pattern.ts","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","setFormInputs","pattern","useState","Math","random","toString","slice","id","touched","setTouched","hasError","urlError","match","urlCheck","htmlFor","classNames","type","placeholder","event","target","onBlur","e","prev","trim","NewMovie","formInputs","onAdd","count","setCount","checkButton","onClick","preventDefault","prevState","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6f8e53b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: ({ name, value }: {\n    name: string,\n    value: string,\n  }) => void,\n  setFormInputs?: React.Dispatch<React.SetStateAction<Movie>>,\n  pattern?: RegExp,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  setFormInputs,\n  pattern = '',\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n  const urlError = touched && required && !value.match(pattern);\n  const urlCheck = (name === 'imgUrl' || name === 'imdbUrl') && urlError;\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    if (setFormInputs) {\n      setFormInputs((prev: Movie) => ({\n        ...prev,\n        [e.target.name]: prev[e.target.name as keyof Movie].trim(),\n      }));\n    }\n\n    setTouched(true);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          name={name}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target)}\n          onBlur={handleBlur}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {urlCheck && (\n        <p className=\"help is-danger\">The url address is not correct</p>\n      )}\n    </div>\n  );\n};\n","// eslint-disable-next-line max-len\nexport const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { Change } from '../../types/Change';\nimport { pattern } from '../../utils/pattern';\n\ntype Props = {\n  onChange: (inputValues: Change) => void,\n  formInputs: Movie,\n  setFormInputs: React.Dispatch<React.SetStateAction<Movie>>,\n  onAdd: (newMovie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({\n  onChange,\n  formInputs,\n  setFormInputs,\n  onAdd,\n}) => {\n  const [count, setCount] = useState(0);\n  const checkButton = !formInputs.title\n  || !formInputs.imdbId\n  || !formInputs.imdbUrl\n  || !formInputs.imgUrl\n  || !formInputs.imdbUrl.match(pattern)\n  || !formInputs.imgUrl.match(pattern);\n  const handleButton = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    onAdd(formInputs);\n    setCount(prevState => prevState + 1);\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={formInputs.title}\n        onChange={onChange}\n        setFormInputs={setFormInputs}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={formInputs.description}\n        onChange={onChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={formInputs.imgUrl}\n        onChange={onChange}\n        pattern={pattern}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={formInputs.imdbUrl}\n        onChange={onChange}\n        pattern={pattern}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={formInputs.imdbId}\n        onChange={onChange}\n        setFormInputs={setFormInputs}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            onClick={handleButton}\n            disabled={checkButton}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [formInputs, setFormInputs] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n  const [movies, setMovies] = useState(moviesFromServer);\n  const handleChange = ({ name, value }: {\n    name: string,\n    value: string,\n  }) => {\n    setFormInputs(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const addMovies = ({\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  }: Movie) => {\n    setMovies(prevState => ([...prevState, {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    },\n    ]));\n\n    setFormInputs({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onChange={handleChange}\n          formInputs={formInputs}\n          setFormInputs={setFormInputs}\n          onAdd={addMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}